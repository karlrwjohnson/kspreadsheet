<!DOCTYPE html>
<html>
<head>
  <link rel='stylesheet' href='styles-main.css' />
  <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
</head>
<body>
  <div id='compatibility-warning'>
    <h1>This application requires experimental Javascript features</h1>

    <p>This app was only tested to work in Google Chrome with the newest
       features enabled. To use it, please
       <a href='chrome://flags/#enable-javascript-harmony'>click here</a>
       and enable the setting &quot;Enable Experimental Javascript&quot; and reload
    </p>
  </div>
  <div style='display:none;'>
    <div id='instructions'>
      <h1>How to use</h1>
      <ul>
        <li>Click in a box to type</li>
        <li>Drag the right edge of a box to grow or shrink it</li>
        <li>Move a table by hovering over it and grabbing the textured border</li>
        <li>Navigate a table using Tab and Enter to move right and down, and
          Shift+Tab and Shift+Enter to move left and up.</li>
        <li>Add columns and rows to a table by tabbing or entering past the
          edge of it</li>
      </ul>
    </div>
  </div>
</body>

<script src='jasmine.js'></script>
<script src='init-jasmine.js'></script>

<script src='libinject.js'></script>
<script src='libfunctional.js'></script>
<script src='libdom.js'></script>
<script src='libmodel.js'></script>
<script src='libview.js'></script>
<script src='Observable.js'></script>
<script src='Cell.js'></script>
<script src='Column.js'></script>
<script src='Table.js'></script>
<script src='Document.js'></script>
<script src='CellController.js'></script>
<script src='TableController.js'></script>
<script src='DocumentController.js'></script>

<script>
  'use strict';

  // Run unit tests
  jasmine_env.execute();

  const doc = new Document();
  const documentController = new DocumentController(doc);

  const instructionPane = Dom.aside(document.getElementById('instructions'));

  const helpButton = Dom.a({style: 'float:right;display:inline-block;float:right;'}, 'Show/Hide Help');
  helpButton.addEventListener('click', () => instructionPane.style.display = instructionPane.style.display === 'none' ? '' : 'none');

  document.body.appendChild(
    Dom.div({id: 'app-root', 'class': 'flex-row'},
      Dom.div({'class': 'flex-column flex-grow'},
        Dom.header(
          helpButton,
          Dom.h1('KSpreadsheet')
        ),
        documentController.element
      ),
      instructionPane
    )
  );

  const sampleDoc = {
    tables: [
      {
        position: [5, 5],
        columns: [
          { width: 6 },
          { width: 4 },
          { width: 4 },
          { width: 4 },
          { width: 4 },
          { width: 4 },
        ],
        data: [
          [{value: 'Attributes'}, {value: 'Base'}, {value: 'Racial'},
           {value: 'Misc'}, {value: 'Total'}, {value: 'Mod' }],
          [{value: 'STR'}, {value: 13}, {value: 0}, {value: 0}, {value: 15}, {value: 1}],
          [{value: 'DEX'}, {value: 17}, {value: 0}, {value: 1}, {value: 18}, {value: 4}],
          [{value: 'CON'}, {value: 13}, {value: 0}, {value: 1}, {value: 14}, {value: 2}],
          [{value: 'INT'}, {value: 18}, {value: 2}, {value: 0}, {value: 20}, {value: 5}],
          [{value: 'WIS'}, {value: 13}, {value: 0}, {value: 0}, {value: 13}, {value: 1}],
          [{value: 'CHA'}, {value: 10}, {value: 0}, {value: 0}, {value: 10}, {value: 0}],
        ]
      }
    ]
  };

  // If there was going to be an error, it would have happened by now.
  // Remove the warning.
  document.getElementById('compatibility-warning').style.display = 'none';

  function demo () {
    documentController.document = new Document(sampleDoc);
  }

  demo();

</script>
</html>
